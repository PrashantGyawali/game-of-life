# Define the compiler and compiler flags
CXX = g++
CXXFLAGS = -O1 -Wall -Wno-missing-braces -I include/
LDFLAGS = -L lib/ -lraylib -lopengl32 -lgdi32 -lwinmm

# Define the source files
SOURCES = ./src/game.cpp ./src/grid/grid.cpp ./src/simulation/simulation.cpp

# Define the object files in the build folder
OBJECTS = $(SOURCES:./src/%.cpp=./build/%.o)

# Define the output executable
TARGET = ./build/game.exe

# Default target
default: $(TARGET)

# Link object files to create the executable
$(TARGET): $(OBJECTS)
	$(CXX) $(OBJECTS) -o $@ $(LDFLAGS)

# Rule to compile each source file into an object file in the build folder
./build/%.o: ./src/%.cpp | build
	$(CXX) $(CXXFLAGS) -c $< -o $@

./build/%.o: ./src/grid/%.cpp | build
	$(CXX) $(CXXFLAGS) -c $< -o $@

./build/%.o: ./src/simulation/%.cpp | build
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Ensure the build directory exists
build:
	mkdir -p build
	mkdir -p build/grid
	mkdir -p build/simulation

# Clean target to remove object files and the executable
clean:
	rm -f $(OBJECTS) $(TARGET)
	rm -rf build

# Run the executable
run: $(TARGET)
	./$(TARGET)